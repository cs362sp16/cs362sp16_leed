        -:    0:Source:cardtest1.c
        -:    0:Graph:cardtest1.gcno
        -:    0:Data:cardtest1.gcda
        -:    0:Runs:2
        -:    0:Programs:1
        -:    1:#include <stdio.h>
        -:    2:#include "dominion.h"
        -:    3:
        -:    4:int fail = 0;
        -:    5:
        6:    6:void assertTrue(int n,char *msg){
        6:    7:	if(n != 0){
        2:    8:		printf("FAILED ASSERT: %s\n", msg);
        2:    9:		fail = 1;
        -:   10:	}
        6:   11:}
        -:   12:
        2:   13:void checkAsserts(){
        2:   14:	if(!fail){
    #####:   15:		printf("TEST SUCCESSFULLY COMPLETED\n");
        -:   16:	}
        2:   17:}
        -:   18:
        -:   19:// Test for scoreFor function for each player
        2:   20:int main(){
        -:   21:	struct gameState g;
        -:   22:	
        2:   23:	int k[10] = {smithy,adventurer,gardens,embargo,cutpurse,mine,ambassador,outpost,baron,tribute};
        2:   24:	int a = initializeGame(2, k, 4, &g);
        2:   25:	assertTrue(a, "Initialize game");
        -:   26:
        -:   27:	// adventurer card = 7, player 0
        2:   28:	a = customHand(0,&g,7);
        2:   29:	int b = handCard(5, &g);
        -:   30:
        -:   31:	int temphand[10];
        2:   32:	a = adventurerCardEffect(&g, 0, temphand);
        2:   33:	assertTrue(a, "Testing adventurer card");
        -:   34:	
        2:   35:	int c = handCard(5, &g);
        2:   36:	assertTrue(b == c, "adventurer card should be replaced with a treasure card");
        -:   37:
        2:   38:	checkAsserts();
        2:   39:	return 0;
        -:   40:}
