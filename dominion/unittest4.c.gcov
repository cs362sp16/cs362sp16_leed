        -:    0:Source:unittest4.c
        -:    0:Graph:unittest4.gcno
        -:    0:Data:unittest4.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include <stdio.h>
        -:    2:#include "dominion.h"
        -:    3:
        -:    4:int fail = 0;
        -:    5:
        2:    6:void assertTrue(int n,char *msg){
        2:    7:	if(n != 0){
    #####:    8:		printf("FAILED ASSERT: %s\n", msg);
    #####:    9:		fail = 1;
        -:   10:	}
        2:   11:}
        -:   12:
        1:   13:void checkAsserts(){
        1:   14:	if(!fail){
        1:   15:		printf("TEST SUCCESSFULLY COMPLETED\n");
        -:   16:	}
        1:   17:}
        -:   18:
        -:   19:// Test for scoreFor function for each player
        1:   20:int main(){
        -:   21:	struct gameState g;
        -:   22:	
        1:   23:	int k[10] = {smithy,adventurer,gardens,embargo,cutpurse,mine,ambassador,outpost,baron,tribute};
        1:   24:	int a = initializeGame(2, k, 4, &g);
        1:   25:	assertTrue(a, "Initialize game");
        -:   26:
        1:   27:	a = scoreFor(1, &g);
        1:   28:	assertTrue(a, "Score for first player, should be 0");
        -:   29:
        -:   30:	//a = scoreFor(2, &g);
        -:   31:	//assertTrue(a, "Score for second player, should be 0");
        -:   32:
        1:   33:	checkAsserts();
        1:   34:	return 0;
        -:   35:}
